<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.basicboard.repository.UserRepository">

    <select id="findByLoginId" parameterType="String" resultType="com.study.basicboard.domain.entity.User">
        SELECT * 
        FROM user 
        WHERE login_id = #{loginId}
    </select>

    <select id="findAllByNicknameContains" parameterType="String" resultType="com.study.basicboard.domain.entity.User">
        SELECT * 
        FROM user 
        WHERE nickname LIKE CONCAT('%', #{nickname}, '%')
    </select>

    <select id="existsByLoginId" parameterType="String" resultType="Boolean">
        SELECT COUNT(*) > 0 
        FROM user 
        WHERE login_id = #{loginId}
    </select>

    <select id="existsByNickname" parameterType="String" resultType="Boolean">
        SELECT COUNT(*) > 0 
        FROM user 
        WHERE nickname = #{nickname}
    </select>

    <select id="countAllByUserRole" parameterType="com.study.basicboard.domain.enum_class.UserRole" resultType="Long">
        SELECT COUNT(*) 
        FROM user 
        WHERE user_role = #{userRole}
    </select>

    <insert id="save" parameterType="com.study.basicboard.domain.entity.User">
        INSERT INTO user (login_id, password, nickname, created_at, received_like_cnt, user_role, user_email)
        VALUES (#{loginId}, #{password}, #{nickname}, #{createdAt}, #{receivedLikeCnt}, #{userRole}, #{email})
        
    </insert>

    <delete id="delete" parameterType="Long">
        DELETE FROM user 
        WHERE id = #{userId}
    </delete>

    <select id="findById" parameterType="Long" resultType="com.study.basicboard.domain.entity.User">
        SELECT * 
        FROM user 
        WHERE id = #{userId}
    </select>
    
    <select id="findByEmail" parameterType="String" resultType="com.study.basicboard.domain.entity.User">
        SELECT * 
        FROM user
        WHERE user_email = #{email}
    </select>
    
    <select id="existsByEmail" parameterType="String" resultType="boolean">
        SELECT COUNT(*) > 0 
        FROM user
        WHERE user_email = #{email}
    </select>

    <select id="count" resultType="Long">
        SELECT COUNT(*) 
        FROM user
    </select>
    
    <select id="findByNicknameAndEmail" parameterType="map" resultType="com.study.basicboard.domain.entity.User">
        SELECT * 
        FROM user 
        WHERE nickname = #{nickname} AND user_email = #{email}
    </select>
    
    <update id="updatePassword" parameterType="com.study.basicboard.domain.entity.User">
    UPDATE user
    SET password = #{password}
    WHERE login_id = #{loginId}
	</update>

</mapper>
